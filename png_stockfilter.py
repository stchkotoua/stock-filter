# -*- coding: utf-8 -*-
"""PNG_stockfilter

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p-syQIesRtF5SugatnXk82BgTNg2PUgd
"""

import yfinance as yf
import pandas as pd
import streamlit as st

stocks = ['AAPL', 'GOOG', 'TSLA', 'AMZN', 'MSFT']
wanted = ['sector', 'grossMargins', 'profitMargins', 'ebitdaMargins', 'revenueGrowth', 'enterpriseToRevenue', 'enterpriseToEbitda', 'enterpriseValue', 'priceToBook', 'beta', 'returnOnAssets', 'returnOnEquity']

def get_stock_data(stocks, wanted):
    stock_data = {}
    for stock in stocks:
        try:
            stock_info = yf.Ticker(stock).info
            stock_data[stock] = {}
            for item in wanted:
                stock_data[stock][item] = stock_info[item]
        except:
            pass
    return stock_data

def stock_filter(stock_data, gross_margin=None, ev_ebitda=None, profit_margin=None, ev_revenue=None):
    filtered_stocks = {}
    for stock, data in stock_data.items():
        if gross_margin and data['grossMargins'] < gross_margin:
            continue
        if ev_ebitda and data['enterpriseToEbitda'] > ev_ebitda:
            continue
        if profit_margin and data['profitMargins'] < profit_margin:
            continue
        if ev_revenue and data['enterpriseToRevenue'] > ev_revenue:
            continue
        filtered_stocks[stock] = data
    return filtered_stocks

def main():
    stock_data = get_stock_data(stocks, wanted)
    
    st.title("Stock Filter App")
    
    gross_margin = st.sidebar.slider("Gross Margin", 0.0, 1.0, 0.15, 0.01)
    ev_ebitda = st.sidebar.slider("EV/EBITDA", 0.0, 50.0, 10.0, 0.1)
    profit_margin = st.sidebar.slider("Profit Margin", 0.0, 1.0, 0.05, 0.01)
    ev_revenue = st.sidebar.slider("EV/Revenue", 0.0, 10.0, 2.0, 0.1)
    
    filtered_stocks = stock_filter(stock_data, gross_margin, ev_ebitda, profit_margin, ev_revenue)
    
    st.write("Filtered Stocks:")
    for stock, data in filtered_stocks.items():
        st.write("Stock: ", stock)
        for item, value in data.items():
            st.write(f"{item}: {value}")

if __name__ == '__main__':
    main()